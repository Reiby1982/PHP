<?php
    // LESSON 2
//---------------------------------------------------------------------------------------------
$begin = 9;
$end = 5;
$num = 0;

if ($begin < $end) {
    if ($num < $end && $num > $begin) {
        echo "between begin && end";
    } else if ($begin === $num) {  //elseif
        echo "begin = end";
    } else   {
        echo "not between begin && end";
    }
} else {
    echo "begin > end";
}

// Альтернативный синтаксис
// Когда код вставляется прямо в HTML

/*
if (условие): 
    код;
elseif (условие):
     код;
else:
     код;
endif; 
*/

// Тернарный оператор
$some_var_res = (!isset($some_var)) ? "default": $some_var;
// (условие): ? выполняется : не выполняется;
// короткий синтаксис
//выражение1 ?: выражение 2;

// с php7 опреатор объединения с null -  ??
// для проверки на инициализированность переменной
$some_var_res2 = $some_var2 ?? 'default';

//---------------------------------------------------------------------------------------------
// оператор выбора swith

$a = 2;
$b = 3;

switch ($a <=> $b) {
    case 0:
        echo "a = b";
        break;
    case 1:
        echo "a > b";
        break;
    case -1:
        echo "a < b";
        break;
    default:
      echo "default";  
}

/* альтернативный синтаксис
    switch (переменная или выражение): 
        case вариант 1:
            код;
        break;
        case вариант 2:
        case вариант 3:
            код;
        break;
    default:
        код;
        break;
    endswith;
*/

//---------------------------------------------------------------------------------------------
// Оператор While

echo "<br>";
// от 1 до 4 
$var = 0;
while ($var < 4) {
    $var++;
    echo " $var";
}

// Альтернативный синтаксис без {}
//while (выражение):
//    код;
//endwhile;


echo "<br>";
$var1 = 5;
do {
    $var1++;
    echo " $var1";   
} while ($var1<7);

//---------------------------------------------------------------------------------------------

// Цикл FOR
//от 10 до -1
echo "<br>";
for ($i = 10; $i >= -1; $i--) {
    echo "i = $i<br>";
}

// альтернативный синтексис
//for (начало; условие; шаг):
//    код;
//endfor;


//---------------------------------------------------------------------------------------------
// массивы

$arr = [1, 2, 3];
var_dump($arr);

var_dump($arr[0]);

// добавляем элемент
$arr[3] = "elem";
var_dump($arr[3]);

$arr['key'] = "elem2"; // в нумерованный массив можно положить значение по ссылке
var_dump($arr);
// ключами могут быть строки и числа

// ассоциативные массивы
$arr2 = [
    'key' => 45,
    5 => null,
    null => 'value',
    false => "false",
    5 => '5',
];
var_dump($arr2);

// Перебор массива

$arr = [1, 2, 3];
$arr2 = [
    'key1'=>"value1",
    'key2'=>"value2",
];

foreach ($arr as $value) { // до php 7 foreach работает с копией массива
    $value +=3;
    echo "$value<br>";
}


foreach ($arr2 as $value2) { 
    echo "$value2<br>";
}

// для получения  ключа и значения
foreach ($arr2 as $key => $value2) { 
    echo "$key<br>";
    echo "$value2<br>";
}

//php 7

$days = [3, 7, 6, 4];
var_dump($days);
foreach ($days as &$day) { // для работы с массивом присваиваем амперсант
    $day +=3;
}

var_dump($days);
unset($days);

// Методы работы с массивами
//2 - функция работы с массивом

//-------------------------------------------------------------------------------------------
// языковая конструкция list


$coord = [
    [1, 4],
    [8, 9]
];

foreach ($coord as list ($a, $b))
{
    echo "a = $a, b = $b";
}



























